$date
	Thu Apr 24 16:50:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 1 " sign $end
$var wire 1 # overflow $end
$var wire 32 $ out [31:0] $end
$var wire 1 % cout $end
$var reg 4 & aluc [3:0] $end
$var reg 32 ' src1 [31:0] $end
$var reg 32 ( src2 [31:0] $end
$scope module dut $end
$var wire 4 ) aluc [3:0] $end
$var wire 32 * src1 [31:0] $end
$var wire 32 + src2 [31:0] $end
$var wire 5 , shamt [4:0] $end
$var reg 1 % cout $end
$var reg 32 - out [31:0] $end
$var reg 1 # overflow $end
$var reg 1 " sign $end
$var reg 33 . tmp [32:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope task check $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11001 .
b11001 -
b1010 ,
b1010 +
b1111 *
b0 )
b1010 (
b1111 '
b0 &
0%
b11001 $
0#
0"
0!
$end
#1
b1010 .
b1010 $
b1010 -
b1 &
b1 )
b10100 '
b10100 *
#2
b1111 ,
b0 .
b1111000000000000111100000000 $
b1111000000000000111100000000 -
b10 &
b10 )
b1111000011110000111100001111 (
b1111000011110000111100001111 +
b11111111000000001111111100000000 '
b11111111000000001111111100000000 *
#3
1"
b11111111000011111111111100001111 $
b11111111000011111111111100001111 -
b11 &
b11 )
#4
b0 ,
1"
b11111111000000001111111100000000 $
b11111111000000001111111100000000 -
b100 &
b100 )
b111111111111111100000000 (
b111111111111111100000000 +
b11111111111111110000000000000000 '
b11111111111111110000000000000000 *
#5
b10 ,
0"
b1 $
b1 -
b101 &
b101 )
b10 (
b10 +
b11111111111111111111111111111011 '
b11111111111111111111111111111011 *
#6
1!
b0 $
b0 -
b110 &
b110 )
b101 '
b101 *
#7
b11 ,
b1000 $
b1000 -
0!
b111 &
b111 )
b11 (
b11 +
b1 '
b1 *
#8
b10 ,
b100000000000000000000000000000 $
b100000000000000000000000000000 -
b1000 &
b1000 )
b10 (
b10 +
b10000000000000000000000000000000 '
b10000000000000000000000000000000 *
#9
b1 ,
1"
b11111111111111111111111111111110 $
b11111111111111111111111111111110 -
b1001 &
b1001 )
b1 (
b1 +
b11111111111111111111111111111100 '
b11111111111111111111111111111100 *
#10
